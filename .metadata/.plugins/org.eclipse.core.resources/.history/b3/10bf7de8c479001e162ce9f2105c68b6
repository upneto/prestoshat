package br.com.prestoshat.controller.api;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import br.com.prestoshat.controller.payload.GamePayload;
import br.com.prestoshat.resources.exception.DaoException;
import br.com.prestoshat.service.GameService;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;

@RestController
@RequestMapping("/api")
public class GameController {

	@Autowired
	private GameService service;
	
//	@ApiOperation(value = "Pesquisa todos os Clientes")
//    @ApiResponses(value = {
//            @ApiResponse(code = 200, message = "Retorna lista de Clientes"),
//            @ApiResponse(code = 500, message = "Foi gerada uma exceção"),
//    })
//	@GetMapping(produces="application/json")
//	public ResponseEntity<List<GamePayload>> findAll() throws DaoException {
//		return new ResponseEntity<>(this.service.findAll(), HttpStatus.OK);
//	}
//	
//	@ApiOperation(value = "Pesquisa Game por ID")
//    @ApiResponses(value = {
//            @ApiResponse(code = 200, message = "Retorna Game"),
//            @ApiResponse(code = 500, message = "Foi gerada uma exceção"),
//    })
//	@GetMapping(value = "/{id}", produces="application/json", consumes="application/json")
//	public ResponseEntity<GamePayload> findBy(@PathVariable long id) throws DaoException {
//		return new ResponseEntity<>(this.service.find(id), HttpStatus.OK);
//	}
//	
//	@ApiOperation(value = "Grava novo Game")
//    @ApiResponses(value = {
//            @ApiResponse(code = 200, message = "Gravou Game com sucesso"),
//            @ApiResponse(code = 500, message = "Foi gerada uma exceção"),
//    })
//	@PostMapping(produces="application/json", consumes="application/json")
//	public ResponseEntity<?> insert(@RequestBody GamePayload pessoa) throws DaoException {
//		this.service.insert(pessoa);
//		return new ResponseEntity<>(HttpStatus.OK);
//	}
//	
//	@ApiOperation(value = "Altera Game")
//    @ApiResponses(value = {
//            @ApiResponse(code = 200, message = "Alterou Game com sucesso"),
//            @ApiResponse(code = 500, message = "Foi gerada uma exceção"),
//    })
//	@PutMapping(produces="application/json", consumes="application/json")
//	public ResponseEntity<?> update(@RequestBody GamePayload cliente) throws DaoException {
//		this.service.update(cliente);
//		return new ResponseEntity<>(HttpStatus.OK);
//	}
//	
//	@ApiOperation(value = "Remove Game")
//    @ApiResponses(value = {
//            @ApiResponse(code = 200, message = "Removeu Game com sucesso"),
//            @ApiResponse(code = 500, message = "Foi gerada uma exceção"),
//    })
//	@DeleteMapping(value = "/{id}", produces="application/json", consumes="application/json")
//	public ResponseEntity<?> delete(@PathVariable long id) throws DaoException {
//		this.service.delete(id);
//		return new ResponseEntity<>(HttpStatus.OK);
//	}
}
